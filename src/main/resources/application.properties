server.port=5000
spring.application.name=${NOME_DA_APLICACAO:proposta}

## Database
spring.jpa.database=POSTGRESQL
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.database.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/proposta
spring.datasource.username=proposta
spring.datasource.password=password

## Actuator
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${spring.application.name}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

## Tracing
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

## Spring Security
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:8080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:8080/auth/realms/proposta/protocol/openid-connect/certs}

## Vault
vault.token=${VAULT_TOKEN:ee413645-dbe8-4848-afc6-6bb2768ada75}
vault.uri=${VAULT_ADDR:http://localhost:8200}
vault.path=${VAULT_PATH:secret/proposta}

## APIs externas
external.api.contas=${CONTAS_API:http://localhost:8888}
external.api.analise=${ANALISE_API:http://localhost:9999}